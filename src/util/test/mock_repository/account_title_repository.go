// Code generated by MockGen. DO NOT EDIT.
// Source: src/domain/repository/account_title.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	model "accounting/src/domain/model"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAccountTitleRepository is a mock of AccountTitleRepository interface
type MockAccountTitleRepository struct {
	ctrl     *gomock.Controller
	recorder *MockAccountTitleRepositoryMockRecorder
}

// MockAccountTitleRepositoryMockRecorder is the mock recorder for MockAccountTitleRepository
type MockAccountTitleRepositoryMockRecorder struct {
	mock *MockAccountTitleRepository
}

// NewMockAccountTitleRepository creates a new mock instance
func NewMockAccountTitleRepository(ctrl *gomock.Controller) *MockAccountTitleRepository {
	mock := &MockAccountTitleRepository{ctrl: ctrl}
	mock.recorder = &MockAccountTitleRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAccountTitleRepository) EXPECT() *MockAccountTitleRepositoryMockRecorder {
	return m.recorder
}

// Save mocks base method
func (m *MockAccountTitleRepository) Save(arg0 *model.AccountTitle) *model.AccountTitle {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", arg0)
	ret0, _ := ret[0].(*model.AccountTitle)
	return ret0
}

// Save indicates an expected call of Save
func (mr *MockAccountTitleRepositoryMockRecorder) Save(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockAccountTitleRepository)(nil).Save), arg0)
}

// GetAll mocks base method
func (m *MockAccountTitleRepository) GetAll() []*model.AccountTitle {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*model.AccountTitle)
	return ret0
}

// GetAll indicates an expected call of GetAll
func (mr *MockAccountTitleRepositoryMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockAccountTitleRepository)(nil).GetAll))
}
